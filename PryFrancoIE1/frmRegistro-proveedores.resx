<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        09vzf0CAnyRm9lLvAAAAAElFTkSuQmCC
</value>
  </data>
</root>